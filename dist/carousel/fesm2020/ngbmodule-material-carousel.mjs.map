{"version":3,"file":"ngbmodule-material-carousel.mjs","sources":["../../../projects/carousel/src/lib/carousel-slide/carousel-slide.component.html","../../../projects/carousel/src/lib/carousel-slide/carousel-slide.component.ts","../../../projects/carousel/src/lib/carousel.component.html","../../../projects/carousel/src/lib/carousel.component.ts","../../../projects/carousel/src/lib/carousel.module.ts","../../../projects/carousel/src/public_api.ts","../../../projects/carousel/src/ngbmodule-material-carousel.ts"],"sourcesContent":["<ng-template>\n  <div class=\"carousel-slide\" [style.background-image]=\"image\">\n    <div class=\"carousel-slide-content\"><ng-content></ng-content></div>\n    <div\n      *ngIf=\"!hideOverlay\"\n      class=\"carousel-slide-overlay\"\n      [style.background-color]=\"overlayColor\"\n    ></div>\n  </div>\n</ng-template>\n","import { ListKeyManagerOption } from '@angular/cdk/a11y';\nimport {\n  Component,\n  Input,\n  OnInit,\n  TemplateRef,\n  ViewChild\n} from '@angular/core';\nimport { DomSanitizer, SafeStyle } from '@angular/platform-browser';\n\nimport { MatCarouselSlide } from './carousel-slide';\n\n@Component({\n  selector: 'mat-carousel-slide',\n  templateUrl: './carousel-slide.component.html',\n  styleUrls: ['./carousel-slide.component.scss']\n})\nexport class MatCarouselSlideComponent\n  implements ListKeyManagerOption, MatCarouselSlide, OnInit {\n  @Input() public image: SafeStyle;\n  @Input() public overlayColor = '#00000040';\n  @Input() public hideOverlay = false;\n  @Input() public disabled = false; // implements ListKeyManagerOption\n\n  @ViewChild(TemplateRef) public templateRef: TemplateRef<any>;\n    \n  constructor(public sanitizer: DomSanitizer) {\n  }\n\n  public ngOnInit(): void {\n    if (this.image) {\n      this.image = this.sanitizer.bypassSecurityTrustStyle(`url(\"${this.image}\")`);\n    }\n  }\n}\n","<div\n  #carouselContainer\n  class=\"carousel\"\n  tabindex=\"0\"\n  [style.max-width]=\"maxWidth\"\n  [style.height]=\"!maintainAspectRatio ? '100%' : 'auto'\"\n>\n  <ul\n    #carouselList\n    class=\"carousel-list\"\n    role=\"listbox\"\n    [style.flex-direction]=\"orientation === 'rtl' ? 'row-reverse' : 'row'\"\n    [style.height]=\"!maintainAspectRatio ? '100%' : 'auto'\"\n  >\n    <li\n      #carouselSlide\n      *ngFor=\"let slide of slidesList\"\n      class=\"carousel-slide\"\n      role=\"option\"\n      [style.padding-bottom]=\"maintainAspectRatio && proportion ? proportion + '%': '0px'\"\n      [style.height]=\"!maintainAspectRatio && slideHeight ? slideHeight : '0px'\"\n      (panleft)=\"onPan($event, carouselSlide)\"\n      (panright)=\"onPan($event, carouselSlide)\"\n      (panend)=\"onPanEnd($event, carouselSlide)\"\n      (pancancel)=\"onPanEnd($event, carouselSlide)\"\n    >\n      <ng-container [ngTemplateOutlet]=\"slide.templateRef\"></ng-container>\n    </li>\n  </ul>\n\n  <button\n    *ngIf=\"!hideArrows\"\n    mat-icon-button\n    type=\"button\"\n    tabindex=\"-1\"\n    [color]=\"color\"\n    [disabled]=\"!loop && currentIndex == 0\"\n    (click)=\"previous()\"\n  >\n    <mat-icon\n      *ngIf=\"svgIconOverrides?.arrowBack; else: defaultArrowBack\"\n      [svgIcon]=\"svgIconOverrides.arrowBack\"\n    ></mat-icon>\n    <ng-template #defaultArrowBack>\n      <mat-icon>arrow_back</mat-icon>\n    </ng-template>\n  </button>\n  <button\n    *ngIf=\"!hideArrows\"\n    mat-icon-button\n    type=\"button\"\n    tabindex=\"-1\"\n    [color]=\"color\"\n    [disabled]=\"!loop && currentIndex == slidesList.length - 1\"\n    (click)=\"next()\"\n  >\n    <mat-icon\n      *ngIf=\"svgIconOverrides?.arrowForward; else: defaultArrowForward\"\n      [svgIcon]=\"svgIconOverrides.arrowForward\"\n    ></mat-icon>\n    <ng-template #defaultArrowForward>\n      <mat-icon>arrow_forward</mat-icon>\n    </ng-template>\n  </button>\n\n  <div\n    *ngIf=\"!hideIndicators\"\n    class=\"carousel-indicators\"\n    tabindex=\"-1\"\n    [style.flex-direction]=\"orientation === 'rtl' ? 'row-reverse' : 'row'\"\n  >\n    <button\n      *ngFor=\"let slide of slidesList; let i = index\"\n      type=\"button\"\n      tabindex=\"-1\"\n      mat-mini-fab\n      [color]=\"color\"\n      [disabled]=\"i == currentIndex\"\n      (click)=\"slideTo(i)\"\n      (focus)=\"carouselContainer.focus()\"\n    ></button>\n  </div>\n</div>\n","import { animate, style, AnimationBuilder } from '@angular/animations';\nimport { ListKeyManager } from '@angular/cdk/a11y';\nimport { isPlatformBrowser } from '@angular/common';\nimport {\n  AfterContentInit,\n  AfterViewInit,\n  Component,\n  ContentChildren,\n  ElementRef,\n  EventEmitter,\n  HostListener,\n  Inject,\n  Input,\n  OnDestroy,\n  Output,\n  PLATFORM_ID,\n  QueryList,\n  Renderer2,\n  ViewChild\n} from '@angular/core';\nimport { ThemePalette } from '@angular/material/core';\nimport { interval, BehaviorSubject, Observable, Subject } from 'rxjs';\nimport { filter, takeUntil } from 'rxjs/operators';\n\nimport { MatCarousel, Orientation, SvgIconOverrides } from './carousel';\nimport { MatCarouselSlideComponent } from './carousel-slide/carousel-slide.component';\n\nenum Direction {\n  Left,\n  Right,\n  Index\n}\n\n@Component({\n  selector: 'mat-carousel',\n  templateUrl: './carousel.component.html',\n  styleUrls: ['./carousel.component.scss']\n})\nexport class MatCarouselComponent\n  implements AfterContentInit, AfterViewInit, MatCarousel, OnDestroy {\n  @Input() public timings = '250ms ease-in';\n  @Input() public svgIconOverrides: SvgIconOverrides;\n\n  @Input()\n  public set autoplay(value: boolean) {\n    this.autoplay$.next(value);\n    this._autoplay = value;\n  }\n\n  @Input()\n  public set interval(value: number) {\n    this.interval$.next(value);\n  }\n\n  public get loop(): boolean {\n    return this._loop;\n  }\n  @Input()\n  public set loop(value: boolean) {\n    this.loop$.next(value);\n    this._loop = value;\n  }\n\n  @Input() public hideArrows = true;\n  @Input() public hideIndicators = true;\n  @Input() public pauseOnHover = true;\n  @Input() public color: ThemePalette = 'accent';\n\n  public get maxWidth(): string {\n    return this._maxWidth;\n  }\n  @Input()\n  public set maxWidth(value: string) {\n    this._maxWidth = value;\n    this.maxWidth$.next();\n  }\n\n  @Input() public maintainAspectRatio = true;\n  @Input() public proportion = 25;\n  @Input() public slideHeight = '100%';\n\n  @Input()\n  public set slides(value: number) {\n    this.slides$.next(value);\n  }\n\n  @Input() public useKeyboard = false;\n  @Input() public useMouseWheel = false;\n\n  public get orientation(): Orientation {\n    return this._orientation;\n  }\n  @Input()\n  public set orientation(value: Orientation) {\n    this.orientation$.next(value);\n    this._orientation = value;\n  }\n\n  @Output()\n  public animationStart: EventEmitter<number> = new EventEmitter<number>();\n\n  @Output()\n  public change: EventEmitter<number> = new EventEmitter<number>();\n\n  public get currentIndex(): number {\n    if (this.listKeyManager) {\n      return this.listKeyManager.activeItemIndex;\n    }\n\n    return 0;\n  }\n  public get currentSlide(): MatCarouselSlideComponent {\n    if (this.listKeyManager) {\n      return this.listKeyManager.activeItem;\n    }\n\n    return null;\n  }\n\n  @ContentChildren(MatCarouselSlideComponent) public slidesList: QueryList<\n    MatCarouselSlideComponent\n  >;\n  @ViewChild('carouselContainer') private carouselContainer: ElementRef<\n    HTMLDivElement\n  >;\n  @ViewChild('carouselList') private carouselList: ElementRef<HTMLElement>;\n  public listKeyManager: ListKeyManager<MatCarouselSlideComponent>;\n\n  private _autoplay = true;\n  private autoplay$ = new Subject<boolean>();\n\n  private interval$ = new BehaviorSubject<number>(5000);\n  private slides$ = new BehaviorSubject<number>(null);\n\n  private _maxWidth = 'auto';\n  private maxWidth$ = new Subject<never>();\n\n  private _loop = true;\n  private loop$ = new Subject<boolean>();\n\n  private _orientation: Orientation = 'ltr';\n  private orientation$ = new Subject<Orientation>();\n\n  private timer$: Observable<number>;\n  private timerStop$ = new Subject<never>();\n\n  private destroy$ = new Subject<never>();\n  private playing = false;\n\n  constructor(\n    private animationBuilder: AnimationBuilder,\n    private renderer: Renderer2,\n    @Inject(PLATFORM_ID) private platformId\n  ) {}\n\n  public ngAfterContentInit(): void {\n    this.listKeyManager = new ListKeyManager(this.slidesList)\n      .withVerticalOrientation(false)\n      .withHorizontalOrientation(this._orientation)\n      .withWrap(this._loop);\n\n    this.listKeyManager.updateActiveItem(0);\n    this.listKeyManager.change\n      .pipe(takeUntil(this.destroy$))\n      .subscribe(() => this.playAnimation());\n  }\n\n  public ngAfterViewInit(): void {\n    this.autoplay$.pipe(takeUntil(this.destroy$)).subscribe(value => {\n      this.stopTimer();\n      this.startTimer(value);\n    });\n\n    this.interval$.pipe(takeUntil(this.destroy$)).subscribe(value => {\n      this.stopTimer();\n      this.resetTimer(value);\n      this.startTimer(this._autoplay);\n    });\n\n    this.maxWidth$\n      .pipe(takeUntil(this.destroy$))\n      .subscribe(() => this.slideTo(0));\n\n    this.loop$\n      .pipe(takeUntil(this.destroy$))\n      .subscribe(value => this.listKeyManager.withWrap(value));\n\n    this.orientation$\n      .pipe(takeUntil(this.destroy$))\n      .subscribe(value => this.listKeyManager.withHorizontalOrientation(value));\n\n    this.slides$\n      .pipe(\n        takeUntil(this.destroy$),\n        filter(value => value && value < this.slidesList.length)\n      )\n      .subscribe(value => this.resetSlides(value));\n  }\n\n  public ngOnDestroy(): void {\n    this.destroy$.next();\n    this.destroy$.complete();\n  }\n\n  public next(): void {\n    this.goto(Direction.Right);\n  }\n\n  public previous(): void {\n    this.goto(Direction.Left);\n  }\n\n  public slideTo(index: number): void {\n    this.goto(Direction.Index, index);\n  }\n\n  @HostListener('keyup', ['$event'])\n  public onKeyUp(event: KeyboardEvent): void {\n    if (this.useKeyboard && !this.playing) {\n      this.listKeyManager.onKeydown(event);\n    }\n  }\n\n  @HostListener('mouseenter')\n  public onMouseEnter(): void {\n    if(this.pauseOnHover){\n      this.stopTimer();\n    }\n  }\n\n  @HostListener('mouseleave')\n  public onMouseLeave(): void {\n    if(this.pauseOnHover){\n      this.startTimer(this._autoplay);\n    }\n  }\n\n  @HostListener('mousewheel', ['$event'])\n  public onMouseWheel(event: WheelEvent): void {\n    if (this.useMouseWheel) {\n      event.preventDefault(); // prevent window to scroll\n      const Δ = Math.sign(event.deltaY);\n\n      if (Δ > 0) {\n        this.next();\n      } else if (Δ < 0) {\n        this.previous();\n      }\n    }\n  }\n\n  @HostListener('window:resize', ['$event'])\n  public onResize(event: Event): void {\n    // Reset carousel when window is resized\n    // in order to avoid major glitches.\n    this.slideTo(0);\n  }\n\n  public onPan(event: any, slideElem: HTMLElement): void {\n    // https://github.com/angular/angular/issues/10541#issuecomment-346539242\n    // if y velocity is greater, it's a panup/pandown, so ignore.\n    if (Math.abs(event.velocityY) > Math.abs(event.velocityX)) {\n      return;\n    }\n    let Δx = event.deltaX;\n    if (this.isOutOfBounds()) {\n      Δx *= 0.2; // decelerate movement;\n    }\n\n    this.renderer.setStyle(slideElem, 'cursor', 'grabbing');\n    this.renderer.setStyle(\n      this.carouselList.nativeElement,\n      'transform',\n      this.getTranslation(this.getOffset() + Δx)\n    );\n  }\n\n  public onPanEnd(event: any, slideElem: HTMLElement): void {\n    this.renderer.removeStyle(slideElem, 'cursor');\n\n    if (\n      !this.isOutOfBounds() &&\n      Math.abs(event.deltaX) > this.getWidth() * 0.25\n    ) {\n      if (event.deltaX <= 0) {\n        this.next();\n        return;\n      }\n      this.previous();\n      return;\n    }\n    this.playAnimation(); // slide back, don't change current index\n  }\n\n  private isOutOfBounds(): boolean {\n    const sign = this.orientation === 'rtl' ? -1 : 1;\n    const left =\n      sign *\n      (this.carouselList.nativeElement.getBoundingClientRect().left -\n        this.carouselList.nativeElement.offsetParent.getBoundingClientRect()\n          .left);\n    const lastIndex = this.slidesList.length - 1;\n    const width = -this.getWidth() * lastIndex;\n\n    return (\n      (this.listKeyManager.activeItemIndex === 0 && left >= 0) ||\n      (this.listKeyManager.activeItemIndex === lastIndex && left <= width)\n    );\n  }\n\n  private isVisible(): boolean {\n    if (!isPlatformBrowser(this.platformId)) {\n      return false;\n    }\n\n    const elem = this.carouselContainer.nativeElement;\n    const docViewTop = window.pageYOffset;\n    const docViewBottom = docViewTop + window.innerHeight;\n    const elemOffset = elem.getBoundingClientRect();\n    const elemTop = docViewTop + elemOffset.top;\n    const elemBottom = elemTop + elemOffset.height;\n\n    return elemBottom <= docViewBottom || elemTop >= docViewTop;\n  }\n\n  private getOffset(): number {\n    const offset = this.listKeyManager.activeItemIndex * this.getWidth();\n    const sign = this.orientation === 'rtl' ? 1 : -1;\n    return sign * offset;\n  }\n\n  private getTranslation(offset: number): string {\n    return `translateX(${offset}px)`;\n  }\n\n  private getWidth(): number {\n    return this.carouselContainer.nativeElement.clientWidth;\n  }\n\n  private goto(direction: Direction, index?: number): void {\n    if (!this.playing) {\n      const rtl = this.orientation === 'rtl';\n\n      switch (direction) {\n        case Direction.Left:\n          return rtl\n            ? this.listKeyManager.setNextItemActive()\n            : this.listKeyManager.setPreviousItemActive();\n        case Direction.Right:\n          return rtl\n            ? this.listKeyManager.setPreviousItemActive()\n            : this.listKeyManager.setNextItemActive();\n        case Direction.Index:\n          return this.listKeyManager.setActiveItem(index);\n      }\n    }\n  }\n\n  private playAnimation(): void {\n    const translation = this.getTranslation(this.getOffset());\n    const factory = this.animationBuilder.build(\n      animate(this.timings, style({ transform: translation }))\n    );\n    const animation = factory.create(this.carouselList.nativeElement);\n\n    animation.onStart(() => {\n      this.playing = true;\n      this.animationStart.emit(this.currentIndex);\n  });\n    animation.onDone(() => {\n      this.change.emit(this.currentIndex);\n      this.playing = false;\n      this.renderer.setStyle(\n        this.carouselList.nativeElement,\n        'transform',\n        translation\n      );\n      animation.destroy();\n    });\n    animation.play();\n  }\n\n  private resetSlides(slides: number): void {\n    this.slidesList.reset(this.slidesList.toArray().slice(0, slides));\n  }\n\n  private resetTimer(value: number): void {\n    this.timer$ = interval(value);\n  }\n\n  private startTimer(autoplay: boolean): void {\n    if (!autoplay) {\n      return;\n    }\n\n    this.timer$\n      .pipe(\n        takeUntil(this.timerStop$),\n        takeUntil(this.destroy$),\n        filter(() => this.isVisible())\n      )\n      .subscribe(() => {\n        this.listKeyManager.withWrap(true).setNextItemActive();\n        this.listKeyManager.withWrap(this.loop);\n      });\n  }\n\n  private stopTimer(): void {\n    this.timerStop$.next();\n  }\n}\n","import { NgModule, Injectable } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\n\nimport { MatCarouselComponent } from './carousel.component';\nimport { MatCarouselSlideComponent } from './carousel-slide/carousel-slide.component';\nimport {\n  HammerGestureConfig,\n  HAMMER_GESTURE_CONFIG,\n  HammerModule\n} from '@angular/platform-browser';\nimport { ModuleWithProviders } from '@angular/core';\n\n// https://github.com/angular/angular/issues/10541#issuecomment-300761387\n@Injectable()\nexport class MatCarouselHammerConfig extends HammerGestureConfig {\n  overrides = {\n    pinch: { enable: false },\n    rotate: { enable: false }\n  };\n}\n@NgModule({\n  declarations: [MatCarouselComponent, MatCarouselSlideComponent],\n  imports: [CommonModule, MatButtonModule, MatIconModule, HammerModule],\n  exports: [MatCarouselComponent, MatCarouselSlideComponent]\n})\nexport class MatCarouselModule {\n  static forRoot(): ModuleWithProviders<MatCarouselModule> {\n    return {\n      ngModule: MatCarouselModule,\n      providers: [\n        { provide: HAMMER_GESTURE_CONFIG, useClass: MatCarouselHammerConfig }\n      ]\n    };\n  }\n}\n","/*\n * Public API Surface of mat-carousel\n */\n\nexport * from './lib/carousel.component';\nexport * from './lib/carousel.module';\nexport * from './lib/carousel';\n\nexport * from './lib/carousel-slide/carousel-slide.component';\nexport * from './lib/carousel-slide/carousel-slide';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":[],"mappings":"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"}